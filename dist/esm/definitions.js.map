{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface HealthConnectPlugin {\r\n  checkAvailability(): Promise<{\r\n    availability: HealthConnectAvailability;\r\n  }>;\r\n  insertRecords(options: { records: Record[] }): Promise<{\r\n    recordIds: string[];\r\n  }>;\r\n  readRecord(options: { type: RecordType; recordId: string }): Promise<{\r\n    record: StoredRecord;\r\n  }>;\r\n  readRecords(options: {\r\n    type: RecordType;\r\n    timeRangeFilter: TimeRangeFilter;\r\n    dataOriginFilter?: string[];\r\n    ascendingOrder?: boolean;\r\n    pageSize?: number;\r\n    pageToken?: string;\r\n  }): Promise<{\r\n    records: StoredRecord[];\r\n    pageToken?: string;\r\n  }>;\r\n  getChangesToken(options: { types: RecordType[] }): Promise<{\r\n    token: string;\r\n  }>;\r\n  getChanges(options: { token: string }): Promise<{\r\n    changes: Change[];\r\n    nextToken: string;\r\n  }>;\r\n  requestHealthPermissions(options: { read: RecordType[]; write: RecordType[] }): Promise<{\r\n    grantedPermissions: string[];\r\n    hasAllPermissions: boolean;\r\n  }>;\r\n  checkHealthPermissions(options: { read: RecordType[]; write: RecordType[] }): Promise<{\r\n    grantedPermissions: string[];\r\n    hasAllPermissions: boolean;\r\n  }>;\r\n  revokeHealthPermissions(): Promise<void>;\r\n  openHealthConnectSetting(): Promise<void>;\r\n}\r\nexport type HealthConnectAvailability = 'Available' | 'NotInstalled' | 'NotSupported';\r\nexport type RecordType = \r\n  | 'ActiveCaloriesBurned'\r\n  | 'BasalBodyTemperature'\r\n  | 'BasalMetabolicRate'\r\n  | 'BloodGlucose'\r\n  | 'BloodPressure'\r\n  | 'BodyFat'\r\n  | 'BodyTemperature'\r\n  | 'Distance'\r\n  | 'ExerciseSession'\r\n  | 'FloorsClimbed'\r\n  | 'HeartRateSeries'\r\n  | 'Height'\r\n  | 'Hydration'\r\n  | 'Nutrition'\r\n  | 'OxygenSaturation'\r\n  | 'RespiratoryRate'\r\n  | 'RestingHeartRate'\r\n  | 'Sleep'\r\n  | 'Speed'\r\n  | 'Steps'\r\n  | 'TotalCaloriesBurned'\r\n  | 'Weight'\r\n  | 'WheelchairPushes';\r\ntype RecordBase = {\r\n  metadata: RecordMetadata;\r\n};\r\ntype StoredRecord = RecordBase & Record;\r\nexport type Volume = {\r\n  unit: 'milliliter' | 'liter' | 'fluid_ounce';\r\n  value: number;\r\n};\r\n\r\nexport type Distance = {\r\n  unit: 'kilometers' | 'meters' | 'miles' | 'feet';\r\n  value: number;\r\n};\r\n\r\nexport type Speed = {\r\n  unit: 'metersPerSecond' | 'kilometersPerHour' | 'milesPerHour';\r\n  value: number;\r\n};\r\n\r\nexport type Record =\r\n  | {\r\n      type: 'ActiveCaloriesBurned';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      energy: Energy;\r\n    }\r\n  | {\r\n      type: 'BasalBodyTemperature';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      temperature: Temperature;\r\n      measurementLocation:\r\n        | 'unknown'\r\n        | 'armpit'\r\n        | 'finger'\r\n        | 'forehead'\r\n        | 'mouth'\r\n        | 'rectum'\r\n        | 'temporal_artery'\r\n        | 'toe'\r\n        | 'ear'\r\n        | 'wrist'\r\n        | 'vagina';\r\n    }\r\n  | {\r\n      type: 'BasalMetabolicRate';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      basalMetabolicRate: Power;\r\n    }\r\n  | {\r\n      type: 'BloodGlucose';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      level: BloodGlucose;\r\n      specimenSource:\r\n        | 'unknown'\r\n        | 'interstitial_fluid'\r\n        | 'capillary_blood'\r\n        | 'plasma'\r\n        | 'serum'\r\n        | 'tears'\r\n        | 'whole_blood';\r\n      mealType: 'unknown' | 'breakfast' | 'lunch' | 'dinner' | 'snack';\r\n      relationToMeal: 'unknown' | 'general' | 'fasting' | 'before_meal' | 'after_meal';\r\n    }\r\n  | {\r\n      type: 'BloodPressure';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      systolic: Pressure;\r\n      diastolic: Pressure;\r\n      bodyPosition: 'unknown' | 'standing_up' | 'sitting_down' | 'lying_down' | 'reclining';\r\n      measurementLocation: 'unknown' | 'left_wrist' | 'right_wrist' | 'left_upper_arm' | 'right_upper_arm';\r\n    }\r\n  | {\r\n      type: 'BodyFat';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      percentage: Percentage;\r\n    }\r\n  | {\r\n      type: 'BodyTemperature';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      temperature: Temperature;\r\n      measurementLocation: 'unknown' | 'armpit' | 'finger' | 'forehead' | 'mouth' | 'rectum' | 'temporal_artery' | 'toe' | 'ear' | 'wrist' | 'vagina';\r\n    }\r\n  | {\r\n      type: 'HeartRateSeries';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      samples: HeartRateSample[];\r\n    }\r\n  | {\r\n      type: 'Height';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      height: Length;\r\n    }\r\n  | {\r\n      type: 'OxygenSaturation';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      percentage: Percentage;\r\n    }\r\n  | {\r\n      type: 'RespiratoryRate';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      rate: number;\r\n    }\r\n  | {\r\n      type: 'RestingHeartRate';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      beatsPerMinute: number;\r\n    }\r\n  | {\r\n      type: 'Steps';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      count: number;\r\n    }\r\n  | {\r\n      type: 'Distance';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      distance: Distance;\r\n    }\r\n  | {\r\n      type: 'ExerciseSession';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      exerciseType: string;\r\n      title?: string;\r\n      notes?: string;\r\n    }\r\n  | {\r\n      type: 'FloorsClimbed';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      floors: number;\r\n    }\r\n  | {\r\n      type: 'Hydration';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      volume: Volume;\r\n    }\r\n  | {\r\n      type: 'Nutrition';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      name?: string;\r\n      mealType?: 'unknown' | 'breakfast' | 'lunch' | 'dinner' | 'snack';\r\n      energy?: Energy;\r\n      protein?: Mass;\r\n      totalFat?: Mass;\r\n      saturatedFat?: Mass;\r\n      unsaturatedFat?: Mass;\r\n      carbohydrates?: Mass;\r\n      sugar?: Mass;\r\n      fiber?: Mass;\r\n      sodium?: Mass;\r\n      potassium?: Mass;\r\n      cholesterol?: Mass;\r\n    }\r\n  | {\r\n      type: 'Sleep';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      title?: string;\r\n      notes?: string;\r\n      stages?: Array<{\r\n        startTime: Date;\r\n        endTime: Date;\r\n        stage: 'unknown' | 'awake' | 'sleeping' | 'out_of_bed' | 'light' | 'deep' | 'rem' | 'awake_in_bed';\r\n      }>;\r\n    }\r\n  | {\r\n      type: 'Speed';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      speed: Speed;\r\n    }\r\n  | {\r\n      type: 'TotalCaloriesBurned';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      energy: Energy;\r\n    }\r\n  | {\r\n      type: 'Weight';\r\n      time: Date;\r\n      zoneOffset?: string;\r\n      weight: Mass;\r\n    }\r\n  | {\r\n      type: 'WheelchairPushes';\r\n      startTime: Date;\r\n      startZoneOffset?: string;\r\n      endTime: Date;\r\n      endZoneOffset?: string;\r\n      count: number;\r\n    };\r\nexport type RecordMetadata = {\r\n  id: string;\r\n  clientRecordId?: string;\r\n  clientRecordVersion: number;\r\n  lastModifiedTime: Date;\r\n  dataOrigin: string;\r\n};\r\nexport type Change =\r\n  | {\r\n      type: 'Upsert';\r\n      record: Record;\r\n    }\r\n  | {\r\n      type: 'Delete';\r\n      recordId: string;\r\n    };\r\nexport type TimeRangeFilter =\r\n  | {\r\n      type: 'before' | 'after';\r\n      time: Date;\r\n    }\r\n  | {\r\n      type: 'between';\r\n      startTime: Date;\r\n      endTime: Date;\r\n    };\r\nexport type Energy = {\r\n  unit: 'calories' | 'kilocalories' | 'joules' | 'kilojoules';\r\n  value: number;\r\n};\r\nexport type HeartRateSample = {\r\n  time: Date;\r\n  beatsPerMinute: number;\r\n};\r\nexport type Temperature = {\r\n  unit: 'celsius' | 'fahrenheit';\r\n  value: number;\r\n};\r\nexport type Percentage = {\r\n  value: number;\r\n};\r\nexport type Power = {\r\n  unit: 'kilocaloriesPerDay' | 'watts';\r\n  value: number;\r\n};\r\nexport type Pressure = {\r\n  unit: 'millimetersOfMercury';\r\n  value: number;\r\n};\r\nexport type Length = {\r\n  unit: 'meter' | 'kilometer' | 'mile' | 'inch' | 'feet';\r\n  value: number;\r\n};\r\nexport type Mass = {\r\n  unit: 'gram' | 'kilogram' | 'milligram' | 'microgram' | 'ounce' | 'pound';\r\n  value: number;\r\n};\r\nexport type BloodGlucose = {\r\n  unit: 'milligramsPerDeciliter' | 'millimolesPerLiter';\r\n  value: number;\r\n};\r\nexport {};\r\n"]}